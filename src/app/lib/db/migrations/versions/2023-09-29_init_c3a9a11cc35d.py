# type: ignore
"""init.

Revision ID: c3a9a11cc35d
Revises:
Create Date: 2023-09-29 19:08:54.193136+00:00

"""
from __future__ import annotations

import warnings

import sqlalchemy as sa
from advanced_alchemy.types import BigIntIdentity, DateTimeUTC
from alembic import op
from sqlalchemy import (
    Text,  # noqa: F401
    func,
)

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.ID = BigIntIdentity
sa.DateTimeUTC = DateTimeUTC

# revision identifiers, used by Alembic.
revision = "c3a9a11cc35d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades() -> None:
    """Schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "book",
        sa.Column("id", sa.ID, nullable=False),
        sa.Column("book_name", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False, server_default=func.now()),
        sa.Column(
            "updated_at",
            sa.DateTimeUTC(timezone=True),
            nullable=False,
            server_default=func.now(),
            server_onupdate=func.now(),
        ),
        sa.Column("published_at", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_bok")),
    )


def schema_downgrades() -> None:
    """Schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table("team_member", schema=None) as batch_op:

    # ### end Alembic commands ###


def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""


def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
